name: CI Workflow

on:
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze Dart
        uses: zgosalvez/github-actions-analyze-dart@v3

      - name: Build apk
        run: flutter build apk

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: build/app/outputs/apk/release/app-release.apk

  versioning:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read current version from file
        id: read_version
        run: |
          VERSION=$(cat version.txt)
          echo "CURRENT_VERSION=${VERSION}" >> $GITHUB_ENV
          echo "::set-output name=CURRENT_VERSION::${VERSION}"

      - name: Create new version tag
        id: create_version_tag
        run: |
          # Use current version from file to create tag
          git tag v${{ steps.read_version.outputs.CURRENT_VERSION }}
          echo "::set-output name=TAG_NAME::v${{ steps.read_version.outputs.CURRENT_VERSION }}"

      - name: Increment version in file
        run: |
          # Increment version number in version.txt
          CURRENT_VERSION=$((${{ steps.read_version.outputs.CURRENT_VERSION }} + 1))
          echo "${CURRENT_VERSION}" > version.txt

      - name: Push tag to repository
        env:
          VERSIONING: ${{ secrets.VERSIONING }}
        run: |
          git remote set-url origin https://x-access-token:${VERSIONING}@github.com/${{ github.repository }}
          git push origin ${{ steps.create_version_tag.outputs.TAG_NAME }}

  create-release:
    runs-on: ubuntu-latest
    needs: versioning
    if: ${{ github.event_name == 'pull_request' && github.base_ref == 'main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read latest tag from versioning job
        id: read_latest_tag
        run: echo "LATEST_TAG=${{ needs.versioning.outputs.TAG_NAME }}" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/apk/release/app-release.apk
          tag_name: ${{ needs.versioning.outputs.TAG_NAME }}
          name: "Release ${{ needs.versioning.outputs.TAG_NAME }}"
          prerelease: false
        env:
          VERSIONING: ${{ secrets.VERSIONING }}

  create-prerelease:
    runs-on: ubuntu-latest
    needs: versioning
    if: ${{ github.event_name == 'pull_request' && github.base_ref == 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read latest tag from versioning job
        id: read_latest_tag
        run: echo "LATEST_TAG=${{ needs.versioning.outputs.TAG_NAME }}" >> $GITHUB_ENV

      - name: Create Prerelease
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/apk/release/app-release.apk
          tag_name: ${{ needs.versioning.outputs.TAG_NAME }}
          name: "Pre-Release ${{ needs.versioning.outputs.TAG_NAME }}"
          prerelease: true
        env:
          VERSIONING: ${{ secrets.VERSIONING }}
